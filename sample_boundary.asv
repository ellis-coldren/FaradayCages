n = 20;r = 0.1;
c = exp(2i*pi*(1:n)/n);
rr = r*ones(size(c));
N = max(0, round(4+.5*log10(r)));
npts=3*N+2;
npts=3;

%location of the boundary
min_x = -1.5;
max_x = 1.5;
min_y = -1.5;
max_y = 1.5;
dist_x = max_x - min_x;
dist_y = max_y - min_y;
setup_x_boundary = min_x:dist_x/npts:max_x;
setup_y_boundary = min_y:dist_y/npts:max_y;
top_boundary = setup_x_boundary + max_y*1i;
bottom_boundary = setup_x_boundary + min_y*1i;

right_boundary = min_x + setup_y_boundary*1i;
left_boundary = max_x + setup_y_boundary*1i;

circ=exp((1:npts)'*2i*pi/npts);
z = []; for j=1:n
    z=[z;c(j)+rr(j)*circ]; end

A = [0; -ones(size(z, 1), 1); zeros(4*size(top_boundary', 1), 1)];
zs = 2;
%explicitly define the values on boundary
linear_vector = [1 1];
top_boun
for j = 1:size(top_boundary', 1)
    top_boundary_values = linear_vector * [real(top_boundary(j)); imag(top_boundary(j))];
end
disp(top_boundary_values);

rhs = [0; -log(abs(z-zs)); zeros(4*size(top_boundary', 1), 1)];

for j=1:n
    A = [A [1; log(abs(z-c(j))); zeros(4*size(top_boundary', 1), 1)]];
    for k = 1:N
        zck = (z-c(j)).^(-k);
        A = [A [0; real(zck); zeros(4*size(top_boundary', 1), 1)] [0; imag(zck); zeros(4*size(top_boundary', 1), 1)]];
    end
end

X = A/rhs;




